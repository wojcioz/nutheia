; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

define void @_rope_embedding_0d1d2d3d4d5d6d(ptr addrspace(1) %0, i32 %1, ptr addrspace(1) %2, i32 %3, ptr addrspace(1) %4, i32 %5, i32 %6) local_unnamed_addr !dbg !5 {
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !8
  %9 = and i32 %8, 63, !dbg !8
  %10 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !dbg !9
  %11 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.y(), !dbg !10
  %12 = srem i32 %10, %6, !dbg !11
  %13 = mul i32 %12, %5, !dbg !12
  %14 = sext i32 %13 to i64, !dbg !13
  %15 = getelementptr i16, ptr addrspace(1) %4, i64 %14, !dbg !13
  %16 = zext i32 %9 to i64, !dbg !14
  %17 = getelementptr i16, ptr addrspace(1) %15, i64 %16, !dbg !14
  %18 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.b16 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u16 $0, $3;", "=c,l,b,c,b"(ptr addrspace(1) %17, i1 true, i16 0, i1 true) #2, !dbg !15
  %19 = mul i32 %12, %3, !dbg !16
  %20 = sext i32 %19 to i64, !dbg !17
  %21 = getelementptr i16, ptr addrspace(1) %2, i64 %20, !dbg !17
  %22 = getelementptr i16, ptr addrspace(1) %21, i64 %16, !dbg !18
  %23 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.b16 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u16 $0, $3;", "=c,l,b,c,b"(ptr addrspace(1) %22, i1 true, i16 0, i1 true) #2, !dbg !19
  %24 = tail call i16 asm " { .reg .b16 c;         \0A    mov.b16 c, 0xbf80U; \0A    fma.rn.bf16 $0, $2, c, $1;} \0A", "=h,h,h"(i16 0, i16 %18) #2, !dbg !20
  %25 = shl i32 %11, 2, !dbg !21
  %26 = add i32 %25, 4, !dbg !22
  %27 = tail call i32 @llvm.smin.i32(i32 %26, i32 8), !dbg !23
  %28 = icmp slt i32 %25, %27, !dbg !27
  br i1 %28, label %.lr.ph, label %._crit_edge, !dbg !27

.lr.ph:                                           ; preds = %7
  %29 = mul i32 %10, %1, !dbg !28
  %30 = add i32 %29, %9
  %31 = and i32 %8, 64
  %32 = icmp eq i32 %31, 0
  br label %33, !dbg !27

33:                                               ; preds = %.lr.ph, %33
  %34 = phi i32 [ %25, %.lr.ph ], [ %50, %33 ]
  %35 = shl i32 %34, 7, !dbg !29
  %36 = add i32 %30, %35, !dbg !30
  %37 = add i32 %36, 64, !dbg !31
  %38 = sext i32 %36 to i64, !dbg !32
  %39 = getelementptr i16, ptr addrspace(1) %0, i64 %38, !dbg !32
  %40 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.b16 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u16 $0, $3;", "=c,l,b,c,b"(ptr addrspace(1) %39, i1 true, i16 0, i1 true) #2, !dbg !33
  %41 = sext i32 %37 to i64, !dbg !34
  %42 = getelementptr i16, ptr addrspace(1) %0, i64 %41, !dbg !34
  %43 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.b16 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u16 $0, $3;", "=c,l,b,c,b"(ptr addrspace(1) %42, i1 true, i16 0, i1 true) #2, !dbg !35
  %44 = tail call i16 asm " { .reg .b16 c;        \0A    mov.b16 c, 0x8000U; \0A    fma.rn.bf16 $0, $1, $2, c; } \0A", "=h,h,h"(i16 %40, i16 %23) #2, !dbg !36
  %45 = tail call i16 asm " { .reg .b16 c;        \0A    mov.b16 c, 0x8000U; \0A    fma.rn.bf16 $0, $1, $2, c; } \0A", "=h,h,h"(i16 %43, i16 %24) #2, !dbg !37
  %46 = tail call i16 asm " { .reg .b16 c;         \0A    mov.b16 c, 0xbf80U; \0A    fma.rn.bf16 $0, $2, c, $1;} \0A", "=h,h,h"(i16 %44, i16 %45) #2, !dbg !38
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %46, ptr addrspace(1) %39, i1 %32) #2, !dbg !39
  %47 = tail call i16 asm " { .reg .b16 c;        \0A    mov.b16 c, 0x8000U; \0A    fma.rn.bf16 $0, $1, $2, c; } \0A", "=h,h,h"(i16 %43, i16 %23) #2, !dbg !40
  %48 = tail call i16 asm " { .reg .b16 c;        \0A    mov.b16 c, 0x8000U; \0A    fma.rn.bf16 $0, $1, $2, c; } \0A", "=h,h,h"(i16 %40, i16 %24) #2, !dbg !41
  %49 = tail call i16 asm "{ .reg .b16 c;         \0A   mov.b16 c, 0x3f80U; \0A   fma.rn.bf16 $0, $1, c, $2; } \0A", "=h,h,h"(i16 %47, i16 %48) #2, !dbg !42
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %49, ptr addrspace(1) %42, i1 %32) #2, !dbg !43
  %50 = add nsw i32 %34, 1, !dbg !27
  %51 = icmp slt i32 %50, %27, !dbg !27
  br i1 %51, label %33, label %._crit_edge, !dbg !27

._crit_edge:                                      ; preds = %33, %7
  ret void, !dbg !44
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.ctaid.y() #0

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #1

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.dbg.cu = !{!1}
!nvvm.annotations = !{!3, !4, !4, !3}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = distinct !DICompileUnit(language: DW_LANG_C, file: !2, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug)
!2 = !DIFile(filename: "rope_embedding.py", directory: "/opt/conda/lib/python3.11/site-packages/unsloth/kernels")
!3 = !{ptr @_rope_embedding_0d1d2d3d4d5d6d, !"kernel", i32 1}
!4 = !{ptr @_rope_embedding_0d1d2d3d4d5d6d, !"maxntidx", i32 128}
!5 = distinct !DISubprogram(name: "_rope_embedding_0d1d2d3d4d5d6d", linkageName: "_rope_embedding_0d1d2d3d4d5d6d", scope: !2, file: !2, line: 24, type: !6, scopeLine: 24, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1)
!6 = !DISubroutineType(cc: DW_CC_normal, types: !7)
!7 = !{}
!8 = !DILocation(line: 41, column: 32, scope: !5)
!9 = !DILocation(line: 39, column: 34, scope: !5)
!10 = !DILocation(line: 40, column: 40, scope: !5)
!11 = !DILocation(line: 45, column: 41, scope: !5)
!12 = !DILocation(line: 45, column: 49, scope: !5)
!13 = !DILocation(line: 45, column: 25, scope: !5)
!14 = !DILocation(line: 46, column: 37, scope: !5)
!15 = !DILocation(line: 45, column: 19, scope: !5)
!16 = !DILocation(line: 47, column: 49, scope: !5)
!17 = !DILocation(line: 47, column: 25, scope: !5)
!18 = !DILocation(line: 48, column: 37, scope: !5)
!19 = !DILocation(line: 47, column: 19, scope: !5)
!20 = !DILocation(line: 52, column: 16, scope: !5)
!21 = !DILocation(line: 56, column: 39, scope: !5)
!22 = !DILocation(line: 57, column: 33, scope: !5)
!23 = !DILocation(line: 1385, column: 27, scope: !24, inlinedAt: !26)
!24 = distinct !DILexicalBlockFile(scope: !5, file: !25, discriminator: 0)
!25 = !DIFile(filename: "core.py", directory: "/opt/conda/lib/python3.11/site-packages/triton/language")
!26 = !DILocation(line: 57, column: 51, scope: !24)
!27 = !DILocation(line: 60, column: 31, scope: !5)
!28 = !DILocation(line: 61, column: 33, scope: !5)
!29 = !DILocation(line: 61, column: 52, scope: !5)
!30 = !DILocation(line: 61, column: 63, scope: !5)
!31 = !DILocation(line: 62, column: 77, scope: !5)
!32 = !DILocation(line: 65, column: 25, scope: !5)
!33 = !DILocation(line: 65, column: 21, scope: !5)
!34 = !DILocation(line: 66, column: 25, scope: !5)
!35 = !DILocation(line: 66, column: 21, scope: !5)
!36 = !DILocation(line: 68, column: 33, scope: !5)
!37 = !DILocation(line: 68, column: 43, scope: !5)
!38 = !DILocation(line: 68, column: 40, scope: !5)
!39 = !DILocation(line: 68, column: 30, scope: !5)
!40 = !DILocation(line: 69, column: 33, scope: !5)
!41 = !DILocation(line: 69, column: 43, scope: !5)
!42 = !DILocation(line: 69, column: 40, scope: !5)
!43 = !DILocation(line: 69, column: 30, scope: !5)
!44 = !DILocation(line: 70, column: 4, scope: !5)
